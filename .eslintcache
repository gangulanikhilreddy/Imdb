[{"C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\components\\Navbar.js":"1","C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\Redux\\actions.js":"2","C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\App.js":"3","C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\index.js":"4","C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\components\\Auth.js":"5","C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\Redux\\reducer.js":"6","C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\components\\WatchList.js":"7","C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\components\\banner.js":"8","C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\components\\DataList.js":"9"},{"size":1519,"mtime":1610885486000,"results":"10","hashOfConfig":"11"},{"size":935,"mtime":1611031635941,"results":"12","hashOfConfig":"11"},{"size":1772,"mtime":1610975819000,"results":"13","hashOfConfig":"11"},{"size":291,"mtime":1610888998000,"results":"14","hashOfConfig":"11"},{"size":2299,"mtime":1611070400073,"results":"15","hashOfConfig":"11"},{"size":742,"mtime":1611030702414,"results":"16","hashOfConfig":"11"},{"size":1369,"mtime":1610950532000,"results":"17","hashOfConfig":"11"},{"size":260,"mtime":1610699862000,"results":"18","hashOfConfig":"11"},{"size":3402,"mtime":1611030685283,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1tiea04",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\components\\Navbar.js",["43","44","45"],"import React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport './Navbar.css';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {Logout} from '../Redux/actions';\r\n\r\nconst {Header} = Layout;\r\n\r\nclass Navbar extends React.Component{\r\n    render(){\r\n        return(\r\n            <Header className='Header'>\r\n                <div className='menu-items'>\r\n                    <div className=\"logo item\">\r\n                        <Link to='/'><img src=\"icon.jpg\" width=\"60px\"/></Link>\r\n                    </div>\r\n                    <div className='menu item' onClick={this.props.toggle}>Menu</div>\r\n                </div>\r\n                <div className='search'>\r\n                    <input type='text' className='search-bar'/>\r\n                </div>\r\n                <div className='nav-items'>\r\n                    <div className='item'>\r\n                        <Link to='/watchlist'>Watch-list</Link>\r\n                    </div>\r\n                    <div className='signup-signin item'>\r\n                        {this.props.currentUser?<a onClick={()=>{this.props.dispatch(Logout(null))}}>Logout</a>:<Link to='/Auth'>signin</Link>}\r\n                    </div>\r\n                </div>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentUser: state.user\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n      dispatch: dispatch\r\n    };\r\n}\r\n\r\nexport default  connect(mapStateToProps,mapDispatchToProps)(Navbar);",["46","47"],"C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\Redux\\actions.js",[],"C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\App.js",[],["48","49"],"C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\index.js",[],"C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\components\\Auth.js",["50","51"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Login} from '../Redux/actions';\r\nimport ls from \"local-storage\";\r\nimport {Link,Redirect} from \"react-router-dom\";\r\nimport \"./Auth.css\"\r\n\r\nclass Auth extends React.Component{\r\n    state={\r\n        email:'',\r\n        password:''\r\n    }\r\n    login=(e)=>{\r\n        e.preventDefault()\r\n        let data=JSON.parse(ls.get(\"userdata\"))\r\n       for(let i=0;i<data.length;i++){\r\n       if(data[i].email==this.state.email){\r\n          if(data[i].password==this.state.password){\r\n            alert(\"signed in successfully\")\r\n            this.setState({name:\"\",password:\"\"})\r\n            this.props.dispatch(Login(this.state.email))\r\n          }else{\r\n            alert(\"incorrect password\")\r\n            this.setState({name:\"\",password:\"\"}) \r\n          }\r\n       }\r\n     }\r\n        \r\n    }\r\n    render(){\r\n        console.log(\"signup\",this.props.currentUser)\r\n        if(this.props.currentUser){\r\n            return(\r\n                <Redirect to=\"/\"/>\r\n            )\r\n        }\r\n        return(\r\n            <div className=\"signin-details\">\r\n            <form className=\"form\">\r\n            <div style={{width:\"100%\",display:\"flex\",flexDirection:\"column\"}}>\r\n            <p className=\"label\">Email</p>\r\n                <input type='text' value={this.state.email} onChange={e=>{this.setState({email:e.target.value})}}/></div>\r\n                <div style={{width:\"100%\",display:\"flex\",flexDirection:\"column\"}}>\r\n                <p className=\"label\">Password</p>\r\n                <input type='password' value={this.state.password} onChange={e=>{this.setState({password:e.target.value})}}/></div>\r\n                {this.props.currentUser?'':<button className=\"Signin-button\" onClick={this.login}>Login</button>}\r\n               <Link to=\"/Signup\">{this.props.currentUser?'':<button className=\"Signin-button\"  style={{marginRight:\"0px\"}} onClick={()=>{}}>Sign up</button>}</Link>\r\n               </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentUser: state.user\r\n});\r\n  \r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n      dispatch: dispatch\r\n    };\r\n  }\r\n\r\nconst AuthContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Auth);\r\n\r\nexport default AuthContainer;","C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\Redux\\reducer.js",[],"C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\components\\WatchList.js",["52"],"C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\components\\banner.js",["53"],"C:\\Users\\home\\Desktop\\dd1\\imdb\\src\\components\\DataList.js",["54"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getPopularMovies, getTopMovies} from '../Redux/actions';\r\nimport {\r\n    StarTwoTone,\r\n  } from '@ant-design/icons';\r\nimport \"./DataList.css\";\r\nimport ls from \"local-storage\"\r\nimport {Redirect} from \"react-router-dom\"\r\n  \r\n\r\nclass DataList extends React.Component{\r\n    state={\r\n        RedirectToSignin:false\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        this.init(nextProps)\r\n    }\r\n    UNSAFE_componentWillMount(){\r\n        // console.log(this.props.match.params.type)\r\n        this.init()\r\n    }\r\n    init=(nextProps=null)=>{\r\n         let type=nextProps?nextProps.match.params.type:this.props.match.params.type\r\n        switch(type){\r\n            case 'topmovies':{\r\n                this.props.onFetchTopMovies();\r\n                break;\r\n            }\r\n            case 'popularmovies':{\r\n                this.props.onFetchPopularMovies();\r\n                break\r\n            }\r\n            default:{/*do nothing*/}\r\n        }\r\n    }\r\n    AddToWatchList=(value)=>{\r\n        if(!this.props.user){\r\n            this.setState({\r\n                RedirectToSignin:true\r\n            })\r\n            return\r\n        }\r\n        if(!ls.get(\"WatchListData\")){\r\n            ls.set(\"WatchListData\",JSON.stringify([value]))\r\n        }else{\r\n            let data=ls.get(\"WatchListData\")\r\n            data=JSON.parse(data)\r\n            data.push(value)\r\n            ls.set(\"WatchListData\",JSON.stringify(data))\r\n        }\r\n        alert(\"Added To Watch List\")\r\n    }\r\n    render(){\r\n        if(this.state.RedirectToSignin){\r\n            return <Redirect to=\"/Auth\"></Redirect>\r\n        }\r\n        if(this.props.movies){\r\n    var data=this.props.movies.results.map((value,index)=>{\r\n            return(\r\n                \r\n                <div className=\"data-container\" key={index}>\r\n                    <div className=\"img-container\">\r\n                    <img src={`https://image.tmdb.org/t/p/w500${value.poster_path}`}></img>\r\n                    </div>\r\n                    <div className=\"title-container\">\r\n                    <p>{value.original_title}</p>\r\n                    </div>\r\n                    <div className=\"vote-container\">\r\n                    <p><StarTwoTone /> {value.vote_average}</p>\r\n                    </div>\r\n                    <div onClick={()=>{this.AddToWatchList(value)}} className=\"bookmarks\">\r\n                    <i className=\"far fa-bookmark\"></i>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n        // console.log(this.props.movies)\r\n        return(\r\n            \r\n            <div className=\"display\">\r\n\r\n            <h3 className=\"Imdb-charts\">IMDb Charts</h3>\r\n            <h1 className=\"TopRated\">Top Rated Movies</h1>\r\n            <div className=\"titleAndRating\">\r\n            <p style={{marginLeft:\"600px\"}}>TITLE</p>\r\n            <p style={{marginLeft:\"400px\"}}>IMDb Rating</p>\r\n            </div>\r\n           {data}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n    return { movies:state.movies,error:state.error,user:state.user}\r\n}\r\n  \r\nconst mapDispatchprops = (dispatch) => {\r\n    return { \r\n        onFetchTopMovies: () => dispatch(getTopMovies()),\r\n        onFetchPopularMovies: ()=> dispatch(getPopularMovies())\r\n    }\r\n}\r\n  \r\nexport default connect(mapStatetoProps, mapDispatchprops)(DataList);",{"ruleId":"55","severity":1,"message":"56","line":2,"column":18,"nodeType":"57","messageId":"58","endLine":2,"endColumn":22},{"ruleId":"59","severity":1,"message":"60","line":16,"column":38,"nodeType":"61","endLine":16,"endColumn":72},{"ruleId":"62","severity":1,"message":"63","line":28,"column":49,"nodeType":"61","endLine":28,"endColumn":102},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":17,"column":24,"nodeType":"72","messageId":"73","endLine":17,"endColumn":26},{"ruleId":"70","severity":1,"message":"71","line":18,"column":30,"nodeType":"72","messageId":"73","endLine":18,"endColumn":32},{"ruleId":"59","severity":1,"message":"60","line":15,"column":21,"nodeType":"61","endLine":15,"endColumn":86},{"ruleId":"59","severity":1,"message":"60","line":8,"column":13,"nodeType":"61","endLine":8,"endColumn":36},{"ruleId":"59","severity":1,"message":"60","line":64,"column":21,"nodeType":"61","endLine":64,"endColumn":86},"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["74"],"no-negated-in-lhs",["75"],["74"],["75"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]